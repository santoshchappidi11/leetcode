// 303. Range Sum Query - Immutable
// ------------------------------------------------------->
// Input
// ["NumArray", "sumRange", "sumRange", "sumRange"]
// [[[-2, 0, 3, -5, 2, -1]], [0, 2], [2, 5], [0, 5]]
// Output
// [null, 1, -1, -3]

// Explanation
// NumArray numArray = new NumArray([-2, 0, 3, -5, 2, -1]);
// numArray.sumRange(0, 2); // return (-2) + 0 + 3 = 1
// numArray.sumRange(2, 5); // return 3 + (-5) + 2 + (-1) = -1
// numArray.sumRange(0, 5); // return (-2) + 0 + 3 + (-5) + 2 + (-1) = -3

let nums = [-2, 0, 3, -5, 2, -1];

let empty = [];
let sum = 0;

function sumRange(left, right) {
  for (let i = left; i <= right; i++) {
    empty.push(nums[i]);
    sum = empty.reduce((a, b) => a + b, 0);
  }

  return sum;
}

console.log(sumRange(0, 2));
console.log(sumRange(2, 5));
console.log(sumRange(0, 5));
